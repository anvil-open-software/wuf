/*!
 * Copyright (c) 2018 Dematic, Corp.
 * Licensed under the MIT Open Source: https://opensource.org/licenses/MIT
 */

//Expose custom properties for overrides
:host {
    /*     local var        ||                          global override           ||               default value        */
    // sidebar
    --sidebar-resizer-width:                    var(--wuf-sidebar-resizer-width,                 6px);
    --sidebar-resizer-bg-color:                 var(--wuf-sidebar-resizer-bg-color,              var(--wuf-color-gray-300));
    --sidebar-resizer-draghandle-color:         var(--wuf-sidebar-resizer-draghandle-color,      var(--wuf-color-gray-100));

    // header
    --header-height:                            var(--wuf-header-height,                         60px);

    // layout
    --page-width:                               var(--wuf-page-width,                            100%);
    --page-margin:                              var(--wuf-page-margin,                           0);
    --page-padding:                             var(--wuf-page-padding,                          0);
}

// INTERNAL: Access all <app-*> tags that are an immediate child of .main, appearing just after the <router-outlet> to apply some necessary flex box properties these tags need for proper content area scrolling.
:host {
    .main-resizable-content {
        // ng-deep allows us to access the contents passed via <ng-content>.  The alternative would be to add the following to a global CSS at application level (which would make this component less portable).
        ::ng-deep {
            > *:not(router-outlet) {
                display: flex;
                flex-direction: column;
                --page-width: var(--wuf-page-width, 100%);
                min-height: 100%;
            }
        }
    }
}

$dragHandle-size: 4px;
@mixin dragHandle {
    content: "";
    display: inline-block;
    width: $dragHandle-size;
    height: $dragHandle-size;
    line-height: 0;
    background-color: var(--sidebar-resizer-draghandle-color);
    border-radius: $dragHandle-size/2;
    position: absolute;
}

.page {
    margin: var(--page-margin);
    padding: var(--page-padding);
    width: var(--page-width);
    min-height: 100vh;
    .page-row {
        padding: 0;
        margin: 0;
        min-height: 100vh;
        flex-direction: column;
        display: flex;
        .main-header-placeholder {
            // All this does is reserve space for the main-header which drops into place after the login animation
            height: var(--header-height);
            display: flex;
        }
        .main-header {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 2;
            transition: top ease-in .25s;
            &.hidden {
                // shift header off screen above.  Move far enough to hide the dropshadow as well.
                top: calc(var(--header-height) * -1 - 10px);
            }
        }
        .main-wrap {
            width: 100%;
            position: relative;
            padding: 0;
            margin: 0;
            transform: translateX(0);
            display: flex;
            flex: 1 1 100px;
            .main {
                width: 100%;
                flex: 1 1 auto;
                .main-resizable-content {
                    position: relative;
                    width: 100%;
                }
            }
        }
    }
    .main-resizable-drag {
        z-index: 5;
        width: 0; // hide on small
        height: 100%;
        background-color: var(--sidebar-resizer-bg-color);
        cursor: col-resize;
        position: relative;
        transition: width .5s ease;
        overflow: hidden;
        .main-resizable-drag-handle {
            top: 50%;
            left: 50%;
            margin-left: -($dragHandle-size/2);
            margin-top: -($dragHandle-size/2);
            &,
            &:before,
            &:after {
                @include dragHandle;
            }
            &:before {
                top: -($dragHandle-size + 4px);
                left: 0;
            }
            &:after {
                bottom: -($dragHandle-size + 4px);
                left: 0;
            }
        }
    }
    &.sidebarIsCollapsed {
        .main-resizable-drag {
            width: 0;
        }
    }
    &.sidebarIsExpanded {
        .main-resizable-drag {
            width: var(--sidebar-resizer-width);
        }
    }
}

/***** breakpoints *****/
@import "~@anviltech/wuf-web-assets/assets/styles/breakpoints";

@include media-breakpoint-up(md) {
    // Sidebar resizer is hidden initially for small.  Show it on medium-up.
    .page {
        .main-resizable-drag {
            width: var(--sidebar-resizer-width);
        }
        &.sidebarIsCollapsed {
            .main-resizable-drag {
                width: 0;
            }
        }
        &.sidebarIsExpanded {
            .main-resizable-drag {
                width: var(--sidebar-resizer-width);
            }
        }
    }
}

