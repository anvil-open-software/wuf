{"version":3,"sources":["webpack:///./src/app/pages/i18n/i18n-angular/i18n-ang.component.html","webpack:///./src/app/pages/i18n/i18n-angular/i18n-ang.component.ts","webpack:///./src/app/pages/i18n/i18n-intro/i18n-intro.component.html","webpack:///./src/app/pages/i18n/i18n-intro/i18n-intro.component.ts","webpack:///./src/app/pages/i18n/i18n-ngx-translate/i18n-ngx-translate.component.html","webpack:///./src/app/pages/i18n/i18n-ngx-translate/i18n-ngx-translate.component.ts","webpack:///./src/app/pages/i18n/i18n.module.ts","webpack:///./src/app/pages/i18n/routes.ts"],"names":[],"mappings":"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","file":"pages-i18n-i18n-module-ngfactory.js","sourcesContent":["<!--\n  ~ Copyright (c) 2018 Dematic, Corp.\n  ~ Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n  -->\n\n<wuf-content-header>\n    <!-- insert page header content here -->\n    <ng-container toolbarLeft>\n        <wuf-breadcrumb\n            [items]=\"[{ link: '/', label: 'Introduction' }, { link: null, label: 'I18N', active: true }]\"></wuf-breadcrumb>\n    </ng-container>\n\n    <ng-container toolbarRight>\n        <!--page-level utilities here-->\n    </ng-container>\n</wuf-content-header>\n\n<wuf-content-main>\n    <app-component-tabs [tabLabel_1]=\"'Example'\" [tabLabel_2]=\"'Where / When to Use'\" [tabLabel_3]=\"'API'\">\n        <!-- Component name -->\n        <div class=\"component_tabs_name\">I18N - Angular</div>\n\n        <!-- EXAMPLE Content -->\n        <div class=\"component_tabs_1\">\n            <p>\n                The following are examples on usage of Angular's I18N functionality using the following language:\n                <span class=\"example\" i18n=\"language used|An example of no DOM generation@@language\" id=\"language\">English</span>\n            </p>\n            <p>\n                We are using the following culture code:\n                <span class=\"example\" i18n=\"culture code|Culture code used in examples@@culture\"\n                      id=\"culture\">en-us</span>\n            </p>\n\n            <h5>DOM or no DOM</h5>\n            <p>\n                <strong>With</strong> additional DOM element:<br>\n                <span class=\"example\"\n                      i18n=\"intro message|An introduction message for this example using a DOM element@@introductionMessage\">I output an element in the DOM.</span>\n            </p>\n            <p>\n                <strong>Without</strong> additional DOM element:<br>\n                <span class=\"example\">\n            <ng-container i18n=\"no DOM message|An example of no DOM generation@@noDomMessage\">I do NOT output an element in the DOM.</ng-container>\n        </span>\n            </p>\n\n            <h5>Cardinality</h5>\n            <p>Different languages have different pluralization rules. Here's how you could mark up the component\n                template to display the phrase appropriate to the number of wolves:</p>\n\n            <p>\n                Number of wolves:\n                <select [(ngModel)]=\"count\">\n                    <option value=\"0\">0</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                </select>\n            </p>\n\n            <p class=\"example\" i18n=\"use of cardinality|An example of cardinality in action@@cardinality\"\n               id=\"example_cardinality\">\n                { count, plural,\n                =0 {no wolves}\n                =1 {one wolf}\n                =2 {two wolves}\n                other {a wolf pack}\n                }\n            </p>\n\n            <h5>Select Among Alternative Texts</h5>\n            <p>The application displays different text depending upon whether the wolf pack's alpha is male or female.\n                These text alternatives require translation too.</p>\n            <p class=\"example\"\n               i18n=\"use of alternative texts|An example of using alternative texts based on gender@@gender\"\n               id=\"example_gender\">\n                The alpha of our wolf pack is\n                { gender, select,\n                m {male}\n                f {female}\n                }.\n            </p>\n\n            <h5>Nesting pluralization and selection expressions</h5>\n            <p class=\"example\"\n               i18n=\"use of nested pluralization|An example of using nested pluralization and selection@@pluralization\"\n               id=\"example_pluralization\">\n                Our wolf pack:\n                { count, plural,\n                =0 {has no wolves}\n                =1 {has one {gender, select, m {male wolf} f {female wolf}}}\n                =2 {has two {gender, select, m {male wolves} f {female wolves}}}\n                =3 {has a few {gender, select, m {male wolves} f {female wolves}}}\n                other {has many {gender, select, m {male wolves} f {female wolves}}}\n                }.\n            </p>\n        </div>\n\n        <!-- WHEN/WHERE Content -->\n        <div class=\"component_tabs_2\">\n            [WHEN/WHERE to USE]\n        </div>\n\n        <!-- API Content -->\n        <div class=\"component_tabs_3\">\n\n            <h2>Workflow</h2>\n            <p>Angular has a very specific way of dealing with internationalization (i18n). It is described in the\n                official documentation here: <a href=\"https://angular.io/docs/ts/latest/cookbook/i18n.html\"\n                                                target=\"_blank\">Angular Cookbook Internationalization (i18n)</a>.</p>\n            <p>In a nutshell:</p>\n\n            <ol>\n                <li><strong>Develop:</strong> Markup your strings to translate in your templates with the attribute\n                    <code>i18n</code></li>\n                <li><strong>Extract:</strong> Run the Amgular extraction tool (ng-xi18n) to extract the strings in an\n                    XML Format called <a href=\"http://docs.oasis-open.org/xliff/v1.2/os/xliff-core.html\"\n                                         target=\"_blank\">XLIFF-1.2</a></li>\n                <li><strong>Translate:</strong> Copy and then translate the extracted file for every language you plan\n                    to support\n                </li>\n                <li><strong>Serve:</strong> Run the ng compiler to generate a special version of your app for the\n                    different languages\n                </li>\n            </ol>\n\n            <p>There are some gaps in the I18N workflow, including the issue that changing anything in the app requires\n                regeneration of the xliff files, and there is no documented way to merge such files with the already\n                existing translated files. We use <a href=\"https://www.npmjs.com/package/ngx-i18nsupport\"></a> to help\n                us with this problem.</p>\n\n            <hr>\n            <h4>Develop</h4>\n            <p>Mark every element whose contents will be translated by applying the attribute <code>i18n</code> to the\n                tag as described <a href=\"https://angular.io/guide/i18n#mark-text-with-the-i18n-attribute\"\n                                    target=\"_blank\">here</a>. Be sure to also include a <a\n                    href=\"https://angular.io/guide/i18n#help-the-translator-with-a-description-and-meaning\"\n                    target=\"_blank\">meaning|description</a> , and an <a\n                    href=\"https://angular.io/guide/i18n#set-a-custom-id-for-persistence-and-maintenance\"\n                    target=\"_blank\">ID</a> as a value for the <code>i18n</code> attribute. If only a portion of an\n                element with a lot of content needs to be translated, it's recommended to add additional, more atomic\n                tags to only the content you want translated.</p>\n\n            <p>The contents of your tag can use <a href=\"https://angular.io/guide/i18n#translate-singular-and-plural\"\n                                                   target=\"_blank\">ICU expressions</a> to handle singular and\n                pluralization rules.</p>\n\n            <p>Your final markup should look something like this:</p>\n\n            <wuf-code-sample\n                showCopyButton\n                type=\"html\"\n                copy-label=\"Copy\"\n                copy-label-error=\"Error\"\n                copy-label-done=\"Done\"\n                [code]=\"exampleCode\"\n            >\n            </wuf-code-sample>\n\n            <p>Add <a href=\"https://www.w3schools.com/tags/ref_language_codes.asp\" target=\"_blank\">ISO Language\n                Codes</a> to \"languages\" property of <code>/xliffmerge.json</code> file.</p>\n\n            <h4>Extract</h4>\n            <p>When your app is ready, you can extract the strings to translate from this and other templates in the app\n                with the command:</p>\n            <code class=\"block\">npm run extract-i18n</code>\n\n            <h4>Translate</h4>\n            <p>This command will generate a new xliff file for every language identified in\n                <code>./xliffmerge.json</code> and output those files to <code>./src/locale/messages.&lt;language&gt;.xlf</code>.\n                Existing xliff files will be merged with the newly generated files.</p>\n\n            <p>You can now translate the files located in <code>./src/locale</code>. New strings in each file will\n                appear in the default language (English) specified in <code>./xliffmerge.json</code>.\n\n            <p><strong>NOTE:</strong> Any time you change anything in the app you will have to regenerate the xliff\n                files for translation. New strings will appear in the default language (English).</p>\n\n            <h4>Serve</h4>\n            <p>Every localized app requires its own build and deployment. If you want to build and serve an app using\n                the <code>message.fr.xlf</code> (French) xliff file created above, for example, you would build using\n                the following command:</p>\n\n            <code class=\"block\">ng serve --prod --locale fr --i18n-format xlf --i18n-file\n                src/locale/messages.fr.xlf</code>\n\n            <p>All the strings flagged for i18n have been replaced with their French translations. The application is\n                otherwise identical to the default language version.</p>\n\n            <p><strong>NOTE:</strong> Building translated applications <strong>only</strong> works in <a\n                href=\"https://angular.io/guide/aot-compiler\">AOT mode</a>. If you want to use i18n in JIT you will have\n                to update your bootstrap file yourself.</p>\n\n            <h4>Build</h4>\n            <p>To build your application with a specific locale you can use the exact same commands that you used for\n                serve:</p>\n\n            <code class=\"block\">ng build --prod --locale fr --i18n-format xlf --i18n-file\n                src/i18n/messages.fr.xlf</code>\n\n            <p>When you build your application for a specific locale, it is probably a good idea to change the output\n                path with the command <code>--output-path</code> in order to save the files to a different location.</p>\n\n            <code class=\"block\">ng build --prod --output-path dist/fr --locale fr --i18n-format xlf --i18n-file\n                src/i18n/messages.fr.xlf</code>\n\n            <hr>\n            <h2>Testing</h2>\n            <p>As of this writing, there does not appear to be any way to run unit tests via Angular-CLI's <code>ng\n                test</code> using I18N. There is, however, a way to run integration tests (i.e., <code>ng e2e</code>)\n                with the following command using the <code>--serve</code> option, which then takes all of the same\n                options as <code>ng serve</code>. Therefore, we can execute e2e tests in a given language using the\n                following command:</p>\n            <code class=\"block\">\n                ng e2e --serve --prod --aot --locale fr --i18n-format xlf --i18n-file src/locale/messages.fr.xlf\n            </code>\n            <hr>\n            <h2>More Info</h2>\n            <p>For more information on i18n and localization for Angular 2 visit: <a\n                href=\"https://angular.io/guide/i18n\">Angular's I18N Guide</a>.</p>\n\n        </div>\n\n    </app-component-tabs>\n\n</wuf-content-main>\n\n<wuf-content-footer>\n    <!-- insert footer content here -->\n    [footer content goes here]\n</wuf-content-footer>\n","/*\n * Copyright (c) 2018 Dematic, Corp.\n * Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n */\n\nimport { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\n\n\n@Component({\n    selector: 'app-i18n',\n    templateUrl: './i18n-ang.component.html',\n    styleUrls: ['./i18n-ang.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class I18nAngularComponent implements OnInit, OnDestroy {\n\n    // Change these values to see cardinality in action\n    count: number = 0;\n    gender: string = 'f';\n    exampleCode: string = `\n<p class=\"example\" i18n=\"use of nested pluralization|An example of using nested pluralization and selection@@pluralization\" id=\"example_pluralization\">\n    Our wolf pack:\n    { count, plural,\n    =0 {has no wolves}\n    =1 {has one {gender, select, m {male wolf} f {female wolf}}}\n    =2 {has two {gender, select, m {male wolves} f {female wolves}}}\n    =3 {has a few {gender, select, m {male wolves} f {female wolves}}}\n    other {has many {gender, select, m {male wolves} f {female wolves}}}\n    }.\n</p>`;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n    }\n\n}\n","<!--\n  ~ Copyright (c) 2018 Dematic, Corp.\n  ~ Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n  -->\n\n<wuf-content-header>\n    <!-- insert page header content here -->\n    <ng-container toolbarLeft>\n        <wuf-breadcrumb\n            [items]=\"[{ link: '/', label: 'Introduction' }, { link: null, label: 'I18N', active: true }]\"></wuf-breadcrumb>\n    </ng-container>\n\n    <ng-container toolbarRight>\n        <!--page-level utilities here-->\n    </ng-container>\n</wuf-content-header>\n\n<wuf-content-main>\n    <!-- Component name -->\n    <h1>I18N (Internationalization) and Localization</h1>\n\n    <p>There are two different options available for translations of strings in the UI. We recommend reading the documentation for each to determine which is best for a given application.</p>\n\n    <ul>\n        <li><strong><a routerLink=\"/i18n/i18nangular\">Angular I18N</a></strong>.  This is the translation paradigm built into Angular.  It requires creation of different application instances for each language.  These instances are created at build time with a separate build for each.</li>\n        <li><strong><a routerLink=\"/i18n/i18nngxtranslate\">ngx-translate</a></strong>.  This 3rd party library allows string replacement at run time.</li>\n    </ul>\n\n</wuf-content-main>\n\n<wuf-content-footer>\n    <!-- insert footer content here -->\n    [footer content goes here]\n</wuf-content-footer>\n","/*\n * Copyright (c) 2018 Dematic, Corp.\n * Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n */\n\nimport { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\n\n\n@Component({\n    selector: 'app-i18n',\n    templateUrl: './i18n-intro.component.html',\n    styleUrls: ['./i18n-intro.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class I18nIntroComponent implements OnInit, OnDestroy {\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n    }\n\n}\n","<!--\n  ~ Copyright (c) 2018 Dematic, Corp.\n  ~ Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n  -->\n\n<wuf-content-header>\n    <!-- insert page header content here -->\n    <ng-container toolbarLeft>\n        <wuf-breadcrumb\n            [items]=\"[{ link: '/', label: 'Introduction' }, { link: null, label: 'I18N', active: true }]\"></wuf-breadcrumb>\n    </ng-container>\n\n    <ng-container toolbarRight>\n        <!--page-level utilities here-->\n    </ng-container>\n</wuf-content-header>\n\n<wuf-content-main>\n    <app-component-tabs [tabLabel_1]=\"'Example'\" [tabLabel_2]=\"'Where / When to Use'\" [tabLabel_3]=\"'API'\">\n        <!-- Component name -->\n        <div class=\"component_tabs_name\">I18N - ngx-translate</div>\n\n        <!-- EXAMPLE Content -->\n        <div class=\"component_tabs_1\">\n\n            <p [innerHTML]=\"'I18N.INTRODUCTION' | translate\"></p>\n\n            <mat-form-field>\n                <mat-select [placeholder]=\"'I18N.LANGUAGE.LABEL' | translate\" [(value)]=\"currentLanguage\" (selectionChange)=\"onLanguageSelectionChange($event)\">\n                    <mat-option value=\"en\">\n                        {{'I18N.LANGUAGE.LANGUAGES.ENGLISH' | translate}}\n                    </mat-option>\n                    <mat-option value=\"zh\">\n                        {{'I18N.LANGUAGE.LANGUAGES.CHINESE' | translate}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n        </div>\n\n        <!-- WHEN/WHERE Content -->\n        <div class=\"component_tabs_2\">\n            [WHEN/WHERE to USE]\n        </div>\n\n        <!-- API Content -->\n        <div class=\"component_tabs_3\">\n            For more information on using ngx-translate, refer to the <a href=\"https://github.com/ngx-translate/core\" target=\"_blank\">@ngx-translate/core documentation</a>.\n        </div>\n\n    </app-component-tabs>\n\n</wuf-content-main>\n\n<wuf-content-footer>\n    <!-- insert footer content here -->\n    [footer content goes here]\n</wuf-content-footer>\n","/*\n * Copyright (c) 2018 Dematic, Corp.\n * Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n */\n\nimport { Component, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\n\n\n@Component({\n    selector: 'app-i18n',\n    templateUrl: './i18n-ngx-translate.component.html',\n    styleUrls: ['./i18n-ngx-translate.component.scss'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class I18nNgxTranslateComponent implements OnInit, OnDestroy {\n\n    currentLanguage: string;\n\n    constructor(public translate: TranslateService) {\n        translate.onLangChange.subscribe(($event: LangChangeEvent) => {\n            this.onLanguageChange($event);\n        });\n    }\n\n    ngOnInit() {\n        this.currentLanguage = this.translate.currentLang ? this.translate.currentLang : 'en';\n    }\n\n    ngOnDestroy() {\n    }\n\n    onLanguageChange($event: any) {\n        // Language has changed.  Now do something.\n    }\n\n    onLanguageSelectionChange($event: any) {\n        this.translate.use(this.currentLanguage);\n    }\n\n}\n","/*\n * Copyright (c) 2018 Dematic, Corp.\n * Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n */\n\n/***** Angular modules *****/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n/***** Basic app components *****/\nimport { RoutesModule } from './routes';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { UtilsModule } from '../../_internal/utils/utils.module';\n\n/***** Import WUF *****/\nimport { WufLayoutModule } from '@anviltech/wuf-ang-layout';\n\n/***** 3rd party imports *****/\nimport { NgxMdModule } from 'ngx-md';\nimport { CustomMaterialModule } from '../../_internal/material.module';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateSharedLazyModule } from '../../_internal/translate.module';\n\n/***** Import page modules *****/\nimport { I18nIntroComponent } from './i18n-intro/i18n-intro.component';\nimport { I18nAngularComponent } from './i18n-angular/i18n-ang.component';\nimport { I18nNgxTranslateComponent } from './i18n-ngx-translate/i18n-ngx-translate.component';\n\n\n@NgModule({\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ],\n    imports: [\n        // Angular Imports\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        CommonModule,\n\n        // WUF\n        WufLayoutModule,\n\n        // Utils\n        UtilsModule,\n\n        // 3rd Party Imports\n        NgxMdModule, // Markdown\n        CustomMaterialModule,\n        TranslateModule,\n        TranslateSharedLazyModule,\n\n        // Routes (Keep as last module loaded)\n        RoutesModule\n\n    ],\n    declarations: [\n        // Page imports\n        I18nIntroComponent,\n        I18nAngularComponent,\n        I18nNgxTranslateComponent\n    ],\n    providers: [\n        TranslateService\n    ]\n})\nexport class I18nModule {\n}\n","/*\n * Copyright (c) 2018 Dematic, Corp.\n * Licensed under the MIT Open Source: https://opensource.org/licenses/MIT\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\n/***** Import page layouts *****/\nimport { LayoutBasicComponent, LayoutMainComponent, LayoutsModule } from '../../_internal/layouts/layouts.module';\n\n\n/***** Import page modules *****/\nimport { I18nAngularComponent } from './i18n-angular/i18n-ang.component';\nimport { I18nNgxTranslateComponent } from './i18n-ngx-translate/i18n-ngx-translate.component';\nimport { I18nIntroComponent } from './i18n-intro/i18n-intro.component';\n\n\n// Pages with main layout (header, footer, nav, content area)\nconst routes_layout_main = [\n    {path: 'i18nangular', component: I18nAngularComponent, pathMatch: 'full'},\n    {path: 'i18nngxtranslate', component: I18nNgxTranslateComponent, pathMatch: 'full'},\n    {path: '', component: I18nIntroComponent, pathMatch: 'full'}\n];\n\n// Pages with basic layout (no header, footer, or nav)\nconst routes_layout_basic = [];\n\n\nconst routes = [\n    {\n        path: '',\n        // canActivateChild: [AuthGuard], // Ensures user is authenticated before allowing access to any child route\n        children: [\n            {\n                path: '', // This is a component-less route, which makes it easier to guard child routes,\n                // canActivateChild: [AuthGuard], // Ensures user is authenticated before allowing access to any child route\n                component: LayoutMainComponent,\n                children: routes_layout_main\n            },\n            {\n                path: '', // This is a component-less route, which makes it easier to guard child routes,\n                // canActivateChild: [AuthGuard], // Ensures user is authenticated before allowing access to any child route\n                component: LayoutBasicComponent,\n                children: routes_layout_basic\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutsModule,\n        RouterModule.forChild(routes)\n    ]\n})\nexport class RoutesModule {\n}\n"],"sourceRoot":""}